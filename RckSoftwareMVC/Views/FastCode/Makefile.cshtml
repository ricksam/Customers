@{
    Layout = "~/Views/Shared/_LayoutFastCode.cshtml";
    ViewBag.Title = "Makefile";
}

<div id="app">
    <nav class="navbar bg-light">
        <div class="container-fluid">
            <a class="navbar-brand">Fast.Code</a>
            <form class="d-flex" role="search">
                <input class="form-control me-2" placeholder="Nome do makefile" aria-label="Search"
                       v-model="makefile.name">
                <button class="btn btn-outline-primary me-2" type="button" @@click="loadFile()">Load</button>
                <input type="file" id="input_file" class="input-file"
                       style="opacity:0; position:absolute; width:0; height: 0;" onchange="ReadFile(this)" />
                <button class="btn btn-outline-success" type="button" @@click="build">Build</button>
            </form>
        </div>
    </nav>
    <div class="container">
        <div class="input-group my-2">
            <span class="input-group-text">Projeto</span>
            <input type="text" aria-label="Project" class="form-control" v-model="makefile.project" />
        </div>
        <div class="input-group my-2">
            <span class="input-group-text">Templates</span>
            <input type="text" aria-label="Templates" class="form-control" v-model="makefile.templates" />
        </div>
        <div class="input-group my-2">
            <span class="input-group-text">Destino</span>
            <input type="text" aria-label="Templates" class="form-control" v-model="makefile.target" />
        </div>
        <h3 class="my-2">Regras</h3>
        <p>
            Indique um template e o endereço da pasta de destino. Para gerar com base nas entidades utilize o comando
            [entity]
        </p>
        <div v-for="(item, index) in makefile.roles" :key="index" class="row my-2">
            <div class="col-md-4">
                <input class="form-control" placeholder="template" v-model="item.template" />
            </div>
            <div class="col-md-7">
                <input class="form-control" placeholder="gerar" v-model="item.command" />
            </div>
            <div class="col-md-1">
                <button class="btn btn-danger" @@click="modalRemoveRole(index)">-</button>
            </div>
        </div>
        <button class="btn btn-primary my-2" @@click="addRole()">+</button>
    </div>
    <!-- Modal Remove Role -->
    <div class="modal fade" id="modalRemoveRole" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div v-if="selectedRole" class="modal-body">
                    Tem certesa que deseja remover a regra {{selectedRole.template}}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal"
                            @@click="removeRole()">
                        Remover
                    </button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Name -->
    <div class="modal fade" id="modalName" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    Informe o nome do arquivo
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Ok</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles{
    <style>
        .input-group-text {
            width: 100px;
        }
    </style>
}

@section Scripts{
    <script>

        const app = new Vue({
            el: "#app",
            data: {
                defaultFieldTypes: ['pk', 'number', 'money', 'text', 'bool', 'date', 'image', 'upload', 'cpf', 'cnpj'],
                makefile: {
                    name: '',
                    roles: []
                },
                to_remove: 0
            },
            computed: {
                selectedRole() {
                    return this.makefile.roles[this.to_remove]
                }
            },
            methods: {
                addRole() {
                    this.makefile.roles.push({ template: '', command: '' })
                },
                modalRemoveRole(index) {
                    this.to_remove = index;
                    $('#modalRemoveRole').modal('show');
                },
                removeRole() {
                    this.makefile.roles.splice(this.to_remove, 1);
                },
                loadFile() {
                    $("#input_file").val('');
                    $("#input_file").trigger('click');
                },
                build() {
                    if (this.makefile.name) {
                        export2txt(this.makefile);
                    } else {
                        $("#modalName").modal('show');
                    }
                }
            }
        });
        function ReadFile(input_file) {
            if (input_file.files && input_file.files[0]) {
                var FR = new FileReader();
                FR.onload = function (e) {
                    console.log("File", e.target.result);
                    const json = JSON.parse(e.target.result);
                    console.log("Json", json);
                    app.makefile = json;
                };
                FR.readAsText(input_file.files[0]);
            }
        }
        function export2txt(data) {
            const a = document.createElement("a");
            a.href = URL.createObjectURL(new Blob([JSON.stringify(data, null, 2)], {
                type: "application/json;charset=iso-8859-1,%EF%BB%BF"
            }));
            a.setAttribute("download", app.makefile.name + ".json");
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }
    </script>
}
