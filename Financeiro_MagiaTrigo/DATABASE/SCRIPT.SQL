/*[UPDATE]1*/
CREATE TABLE PLN_PLANO_CONTAS(
  PLN_CODIGO INTEGER NOT NULL AUTO_INCREMENT,
  PLN_TIPO CHAR(1),
  PLN_DESCRICAO VARCHAR(60),
  CONSTRAINT PK_PLN_CODIGO PRIMARY KEY(PLN_CODIGO) 
);

CREATE TABLE CON_CONTATOS(
  CON_CODIGO INTEGER NOT NULL AUTO_INCREMENT,
  CON_NOME VARCHAR(60),
  CON_TEL_RESIDENCIAL VARCHAR(20),
  CON_TEL_CELULAR  VARCHAR(20),
  CON_TEL_COMERCIAL VARCHAR(20),
  CON_TEL_FAX VARCHAR(20),
  CON_LOGRADOURO VARCHAR(20),
  CON_NUMERO VARCHAR(20),
  CON_BAIRRO VARCHAR(20),
  CON_CIDADE VARCHAR(20),
  CON_CEP VARCHAR(20),
  CONSTRAINT PK_CON_CODIGO PRIMARY KEY (CON_CODIGO)
);

CREATE TABLE FIN_FINANCEIRO(
  FIN_CODIGO INTEGER NOT NULL AUTO_INCREMENT,  
  FIN_PLN_CODIGO INTEGER,
  FIN_CON_CODIGO INTEGER,
  FIN_DOCUMENTO VARCHAR(20),
  FIN_DESCRICAO VARCHAR(60),
  FIN_EMISSAO DATETIME,
  FIN_VENCIMENTO DATETIME,
  FIN_DTPGTO DATETIME,
  FIN_VALOR NUMERIC(15,4),
  CONSTRAINT PK_FIN_CODIGO PRIMARY KEY(FIN_CODIGO),
  CONSTRAINT FK_FIN_PLN_CODIGO FOREIGN KEY(FIN_PLN_CODIGO) REFERENCES PLN_PLANO_CONTAS (PLN_CODIGO),
  CONSTRAINT FK_FIN_CON_CODIGO FOREIGN KEY (FIN_CON_CODIGO) REFERENCES CON_CONTATOS (CON_CODIGO) 
);

CREATE TABLE PRO_PRODUTOS(
  PRO_CODIGO INTEGER NOT NULL AUTO_INCREMENT,
  PRO_DESCRICAO VARCHAR(60),
  PRO_QTDE NUMERIC(15,4),
  PRO_UNIDADE VARCHAR(20),
  PRO_CUSTO NUMERIC(15,4),
  PRO_PRECO NUMERIC(15,4),
  CONSTRAINT PK_PRO_CODIGO PRIMARY KEY (PRO_CODIGO) 
);

CREATE TABLE OPR_OPERACAO(
  OPR_CODIGO INTEGER NOT NULL,
  OPR_DESCRICAO VARCHAR(40),
  OPR_PLN_CODIGO INTEGER,
  OPR_ADDESTOQUE INTEGER,
  CONSTRAINT PK_OPR_CODIGO PRIMARY KEY(OPR_CODIGO),
  CONSTRAINT FK_OPR_PLN_CODIGO FOREIGN KEY(OPR_PLN_CODIGO) REFERENCES PLN_PLANO_CONTAS (PLN_CODIGO)
);

CREATE TABLE NOT_NOTA(
  NOT_CODIGO INTEGER NOT NULL AUTO_INCREMENT,
  NOT_OPR_CODIGO INTEGER,
  NOT_DOCUMENTO INTEGER,
  NOT_ENTRADA DATE,
  NOT_EMISSAO DATE, 
  CONSTRAINT PK_NOT_CODIGO PRIMARY KEY(NOT_CODIGO),
  CONSTRAINT FK_NOT_OPR_CODIGO FOREIGN KEY(NOT_OPR_CODIGO) REFERENCES OPR_OPERACAO (OPR_CODIGO)
);

CREATE TABLE DPL_DUPLICATAS(
  DPL_CODIGO INTEGER NOT NULL AUTO_INCREMENT,
  DPL_NOT_CODIGO INTEGER,
  DPL_FIN_CODIGO INTEGER,
  CONSTRAINT PK_DPL_CODIGO PRIMARY KEY (DPL_CODIGO),
  CONSTRAINT FK_DPL_NOT_CODIGO FOREIGN KEY (DPL_NOT_CODIGO) REFERENCES NOT_NOTA (NOT_CODIGO),
  CONSTRAINT FK_DPL_FIN_CODIGO FOREIGN KEY(DPL_FIN_CODIGO) REFERENCES FIN_FINANCEIRO (FIN_CODIGO)
);

CREATE TABLE NTI_ITENS(
  NTI_CODIGO INTEGER NOT NULL,
  NTI_NTF_CODIGO INTEGER,
  NTI_PRO_CODIGO INTEGER,
  CONSTRAINT PK_NTI_CODIGO PRIMARY KEY (NTI_CODIGO),
  CONSTRAINT FK_NTI_NTF_CODIGO FOREIGN KEY(NTI_NTF_CODIGO) REFERENCES NOT_NOTA (NOT_CODIGO),
  CONSTRAINT FK_NTI_PRO_CODIGO FOREIGN KEY (NTI_PRO_CODIGO) REFERENCES PRO_PRODUTOS (PRO_CODIGO)
);
/*[UPDATE]2*/
ALTER TABLE CON_CONTATOS ADD CON_EMAIL VARCHAR(200);
/*[UPDATE]3*/
DELETE FROM NTI_ITENS;
DELETE FROM DPL_DUPLICATAS;
DELETE FROM NOT_NOTA;
DELETE FROM OPR_OPERACAO;
DROP TABLE NTI_ITENS;
DROP TABLE DPL_DUPLICATAS;
DROP TABLE NOT_NOTA;
DROP TABLE OPR_OPERACAO;
CREATE TABLE OPR_OPERACAO(
  OPR_CODIGO INTEGER NOT NULL AUTO_INCREMENT,
  OPR_DESCRICAO VARCHAR(40),
  OPR_PLN_CODIGO INTEGER,
  OPR_ADDESTOQUE INTEGER,
  CONSTRAINT PK_OPR_CODIGO PRIMARY KEY(OPR_CODIGO),
  CONSTRAINT FK_OPR_PLN_CODIGO FOREIGN KEY(OPR_PLN_CODIGO) REFERENCES PLN_PLANO_CONTAS (PLN_CODIGO)
);

CREATE TABLE NOT_NOTA(
  NOT_CODIGO INTEGER NOT NULL AUTO_INCREMENT,
  NOT_OPR_CODIGO INTEGER,
  NOT_DOCUMENTO INTEGER,
  NOT_ENTRADA DATE,
  NOT_EMISSAO DATE, 
  CONSTRAINT PK_NOT_CODIGO PRIMARY KEY(NOT_CODIGO),
  CONSTRAINT FK_NOT_OPR_CODIGO FOREIGN KEY(NOT_OPR_CODIGO) REFERENCES OPR_OPERACAO (OPR_CODIGO)
);

CREATE TABLE DPL_DUPLICATAS(
  DPL_CODIGO INTEGER NOT NULL AUTO_INCREMENT,
  DPL_NOT_CODIGO INTEGER,
  DPL_FIN_CODIGO INTEGER,
  CONSTRAINT PK_DPL_CODIGO PRIMARY KEY (DPL_CODIGO),
  CONSTRAINT FK_DPL_NOT_CODIGO FOREIGN KEY (DPL_NOT_CODIGO) REFERENCES NOT_NOTA (NOT_CODIGO),
  CONSTRAINT FK_DPL_FIN_CODIGO FOREIGN KEY(DPL_FIN_CODIGO) REFERENCES FIN_FINANCEIRO (FIN_CODIGO)
);

CREATE TABLE NTI_ITENS(
  NTI_CODIGO INTEGER NOT NULL AUTO_INCREMENT,
  NTI_NTF_CODIGO INTEGER,
  NTI_PRO_CODIGO INTEGER,
  CONSTRAINT PK_NTI_CODIGO PRIMARY KEY (NTI_CODIGO),
  CONSTRAINT FK_NTI_NTF_CODIGO FOREIGN KEY(NTI_NTF_CODIGO) REFERENCES NOT_NOTA (NOT_CODIGO),
  CONSTRAINT FK_NTI_PRO_CODIGO FOREIGN KEY (NTI_PRO_CODIGO) REFERENCES PRO_PRODUTOS (PRO_CODIGO)
);